@inject CustomHttpClient Http
@inject IHttpContextAccessor HttpContextAccessor

@inject IJsonStringLocalizer<ProfileAuthor> Localizer
@inject IToaster Toaster
@inject NavigationManager NavigationManager

<div class="app-nav-profile-info">
    @if (Author != null)
    {
    <img class="app-nav-profile-avatar" width="64" src="/@Author.Avatar" alt="Author.DisplayName">
    <span class="app-nav-profile-name">@Author.DisplayName</span>
    <span class="app-nav-profile-email">@Author.Email</span>
    }
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected Author Author { get; set; }
    protected HttpRequest Request { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Request = HttpContextAccessor.HttpContext.Request;
        var authState = await AuthenticationStateTask;

        if (authState == null || !authState.User.Identity.IsAuthenticated)
            NavigationManager.NavigateTo("account/login?returnUrl=/admin");

        Author = await Http.GetJsonAsync<Author>($"authors/{authState.User.Identity.Name}", Request);
    }
}
